/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SRA_IDS_TO_RUNINFO {
        publishDir = [
            path: { "${params.outdir}/metadata" },
            enabled: false
        ]
    }

    withName: SRA_RUNINFO_TO_FTP {
        publishDir = [
            path: { "${params.outdir}/metadata" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: SRATOOLS_FASTERQDUMP {
        publishDir = [
            [
                path: { "${params.outdir}/fastq" },
                mode: params.publish_dir_mode,
                pattern: "*.fastq.gz"
            ],
            [
                path: { "${params.outdir}/fastq/md5" },
                mode: params.publish_dir_mode,
                pattern: "*.md5"
            ]
        ]
    }
    withName: SPADES {
        ext.args = "--meta --only-assembler"
        publishDir = [
            path: { "${params.outdir}/spades" },
            enabled: true
        ]
    }
    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: SRATOOLS_PREFETCH {
        ext.args = '--max-size 320G'
        publishDir = [
            path: { "${params.outdir}/sra" },
            enabled: false
        ]
    }
    withName: FASTQC {
        ext.args = '--quiet'
    }
    withName: BLOOCOO {
        cpus = 8
        ext.args = '-high-precision'
        publishDir = [
            path: { "${params.outdir}/reads_corrected" },
            enabled: false
        ]
    }
    withName: FATOGFA {
        publishDir = [
            path: { "${params.outdir}/gfa/MINIA" },
            enabled: true,
            mode: 'copy'
        ]
    }
    withName: CAT {
        publishDir = [
            path: { "${params.outdir}/CAT_taxnonomy" },
            enabled: true,
            mode: 'copy'
        ]
    }
    withName: FASTGTOGFA {
        publishDir = [
            path: { "${params.outdir}/gfa/MEGAHIT" },
            enabled: true,
            mode: 'copy'
        ]
    }

    
    withName: PIGZ {
        publishDir = [
            path: { "${params.outdir}/reads_corrected" },
            enabled: true,
            mode: 'copy'
        ]
    }            
    withName: GATBMINIA {
        ext.args = "--no-scaffolding --no-error-correction --step 20 --kmer-sizes 21, 31"
        publishDir = [
            path: { "${params.outdir}/gatbminia" },
            enabled: true,
            mode: 'copy'
        ]
    }
    /* --presets meta-large */
    withName: MEGAHIT {
        ext.args = "--presets meta-sensitive" 
    }    
    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

}
